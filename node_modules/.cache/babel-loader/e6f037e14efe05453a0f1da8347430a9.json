{"ast":null,"code":"import _classCallCheck from \"C:\\\\proj_dex\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\proj_dex\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\proj_dex\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\proj_dex\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"C:\\\\proj_dex\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\proj_dex\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\proj_dex\\\\src\\\\components\\\\Form.js\";\nimport React from 'react';\nimport './css/Form.css';\nimport Input from './Input';\nimport Parse from 'parse';\n\nvar Form =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Form, _React$Component);\n\n  function Form(props) {\n    var _this;\n\n    _classCallCheck(this, Form);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Form).call(this, props));\n    _this.state = {\n      email: 'raphael@raphael.com',\n      password: '1234',\n      type: 'password'\n    };\n    _this.set = _this.set.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Form, [{\n    key: \"logInUser\",\n    value: function logInUser() {\n      var user = Parse.User.logIn(this.state.email, this.state.password).then(function (result) {\n        alert('Welcome');\n      }, function (err) {\n        alert(err.message);\n      });\n    }\n  }, {\n    key: \"signUpUser\",\n    value: function signUpUser() {\n      var user = new Parse.User();\n      user.set('username', this.state.email);\n      user.set('email', this.state.email);\n      user.set('password', this.state.password);\n\n      try {\n        user.signUp().then(function (result) {\n          alert(\"Usuario cadastrado com sucesso !!!\");\n        }, function (err) {\n          alert(err);\n        });\n      } catch (error) {\n        alert(error.message);\n      }\n    }\n  }, {\n    key: \"set\",\n    value: function set(value, typeInput) {\n      if (typeInput === 'email') {\n        this.setState({\n          email: value\n        });\n      } else {\n        this.setState({\n          password: value\n        });\n      }\n    }\n  }, {\n    key: \"changeVisibilityPass\",\n    value: function changeVisibilityPass() {\n      var type = '';\n\n      if (this.state.type === 'password') {\n        type = 'text';\n      } else {\n        type = 'password';\n      }\n\n      this.setState({\n        type: type\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      /*\r\n          <p>Email</p>\r\n          <input type=\"text\" value={this.state.email}\r\n                      onChange={() => {this.setEmail(this.value)}}/>\r\n                  <p>Senha</p>\r\n                  <input type={this.state.type} value={this.state.senha}\r\n                      onChange={() => {this.setSenha(this.value)}}/>\r\n      */\n\n      /*\r\n          <p>Email</p>\r\n                  <Input type='text' value={this.state.email} typeInput='email' set={this.set}/>\r\n                  <p>Senha</p>\r\n                  <Input type={this.state.type} value={this.state.password} typeInput='password' set={this.set}/>\r\n      */\n      return React.createElement(\"header\", {\n        className: \"form-render\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Orange\"), React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"Email\"), React.createElement(Input, {\n        id: \"idEmail\",\n        type: \"text\",\n        value: this.state.email,\n        typeInput: \"email\",\n        set: this.set,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Senha\"), React.createElement(Input, {\n        id: \"idPass\",\n        type: this.state.type,\n        value: this.state.password,\n        typeInput: \"password\",\n        set: this.set,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"checkbox\",\n        onChange: function onChange() {\n          _this2.changeVisibilityPass();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }), \" Mostrar senha\", React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"Problemas para acessar a conta ?\"), React.createElement(\"input\", {\n        type: \"button\",\n        value: \"Acessar\",\n        onClick: function onClick() {\n          _this2.logInUser();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"ou\"), React.createElement(\"input\", {\n        type: \"button\",\n        value: \"Cadastrar\",\n        onClick: function onClick() {\n          _this2.signUpUser();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Form;\n}(React.Component);\n\nexport { Form as default };","map":{"version":3,"sources":["C:\\proj_dex\\src\\components\\Form.js"],"names":["React","Input","Parse","Form","props","state","email","password","type","set","bind","user","User","logIn","then","result","alert","err","message","signUp","error","value","typeInput","setState","changeVisibilityPass","logInUser","signUpUser","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,gBAAP;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;IAEqBC,I;;;;;AAEjB,gBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACd,8EAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AAAEC,MAAAA,KAAK,EAAE,qBAAT;AAAgCC,MAAAA,QAAQ,EAAE,MAA1C;AAAkDC,MAAAA,IAAI,EAAE;AAAxD,KAAb;AACA,UAAKC,GAAL,GAAW,MAAKA,GAAL,CAASC,IAAT,+BAAX;AAHc;AAIjB;;;;gCAEU;AACP,UAAIC,IAAI,GAAGT,KAAK,CAACU,IAAN,CAAWC,KAAX,CAAiB,KAAKR,KAAL,CAAWC,KAA5B,EAAmC,KAAKD,KAAL,CAAWE,QAA9C,EACVO,IADU,CAEP,UAACC,MAAD,EAAY;AACRC,QAAAA,KAAK,CAAC,SAAD,CAAL;AACH,OAJM,EAKP,UAACC,GAAD,EAAS;AACLD,QAAAA,KAAK,CAACC,GAAG,CAACC,OAAL,CAAL;AACH,OAPM,CAAX;AASH;;;iCAEW;AACR,UAAIP,IAAI,GAAG,IAAIT,KAAK,CAACU,IAAV,EAAX;AACAD,MAAAA,IAAI,CAACF,GAAL,CAAS,UAAT,EAAqB,KAAKJ,KAAL,CAAWC,KAAhC;AACAK,MAAAA,IAAI,CAACF,GAAL,CAAS,OAAT,EAAkB,KAAKJ,KAAL,CAAWC,KAA7B;AACAK,MAAAA,IAAI,CAACF,GAAL,CAAS,UAAT,EAAqB,KAAKJ,KAAL,CAAWE,QAAhC;;AACA,UAAG;AACCI,QAAAA,IAAI,CAACQ,MAAL,GACCL,IADD,CAEI,UAACC,MAAD,EAAY;AACRC,UAAAA,KAAK,CAAC,oCAAD,CAAL;AACH,SAJL,EAKI,UAACC,GAAD,EAAS;AACLD,UAAAA,KAAK,CAACC,GAAD,CAAL;AACH,SAPL;AASH,OAVD,CAUC,OAAMG,KAAN,EAAY;AACTJ,QAAAA,KAAK,CAACI,KAAK,CAACF,OAAP,CAAL;AACH;AACJ;;;wBAEGG,K,EAAOC,S,EAAU;AACjB,UAAGA,SAAS,KAAK,OAAjB,EAAyB;AACrB,aAAKC,QAAL,CAAc;AAACjB,UAAAA,KAAK,EAAEe;AAAR,SAAd;AACH,OAFD,MAEK;AACD,aAAKE,QAAL,CAAc;AAAChB,UAAAA,QAAQ,EAAEc;AAAX,SAAd;AACH;AACJ;;;2CAEqB;AAClB,UAAIb,IAAI,GAAG,EAAX;;AACA,UAAG,KAAKH,KAAL,CAAWG,IAAX,KAAoB,UAAvB,EAAkC;AAC9BA,QAAAA,IAAI,GAAG,MAAP;AACH,OAFD,MAEK;AACDA,QAAAA,IAAI,GAAG,UAAP;AACH;;AACD,WAAKe,QAAL,CAAc;AAACf,QAAAA,IAAI,EAAJA;AAAD,OAAd;AACH;;;6BAEO;AAAA;;AACJ;;;;;;;;;AASA;;;;;;AAMA,aACI;AAAQ,QAAA,SAAS,EAAC,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI,oBAAC,KAAD;AAAO,QAAA,EAAE,EAAC,SAAV;AAAoB,QAAA,IAAI,EAAC,MAAzB;AAAgC,QAAA,KAAK,EAAE,KAAKH,KAAL,CAAWC,KAAlD;AAAyD,QAAA,SAAS,EAAC,OAAnE;AAA2E,QAAA,GAAG,EAAE,KAAKG,GAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHJ,EAII,oBAAC,KAAD;AAAO,QAAA,EAAE,EAAC,QAAV;AAAmB,QAAA,IAAI,EAAE,KAAKJ,KAAL,CAAWG,IAApC;AAA0C,QAAA,KAAK,EAAE,KAAKH,KAAL,CAAWE,QAA5D;AAAsE,QAAA,SAAS,EAAC,UAAhF;AAA2F,QAAA,GAAG,EAAE,KAAKE,GAArG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,EAKI;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,QAAQ,EAAE,oBAAM;AAAC,UAAA,MAAI,CAACe,oBAAL;AAA4B,SAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALJ,oBAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CANJ,EAOI;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC,SAA3B;AAAqC,QAAA,OAAO,EAAE,mBAAM;AAAC,UAAA,MAAI,CAACC,SAAL;AAAiB,SAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPJ,CAFJ,EAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXJ,EAYI;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC,WAA3B;AAAuC,QAAA,OAAO,EAAE,mBAAM;AAAC,UAAA,MAAI,CAACC,UAAL;AAAkB,SAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAZJ,CADJ;AAgBH;;;;EA1F6B1B,KAAK,CAAC2B,S;;SAAnBxB,I","sourcesContent":["import React from 'react';\r\nimport './css/Form.css';\r\nimport Input from './Input';\r\nimport Parse from 'parse';\r\n\r\nexport default class Form extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = { email: 'raphael@raphael.com', password: '1234', type: 'password' };\r\n        this.set = this.set.bind(this);\r\n    }\r\n\r\n    logInUser(){\r\n        let user = Parse.User.logIn(this.state.email, this.state.password)\r\n        .then(\r\n            (result) => {\r\n                alert('Welcome');\r\n            },\r\n            (err) => {\r\n                alert(err.message);\r\n            }\r\n        );\r\n    }\r\n\r\n    signUpUser(){\r\n        let user = new Parse.User();\r\n        user.set('username', this.state.email);\r\n        user.set('email', this.state.email);\r\n        user.set('password', this.state.password);\r\n        try{\r\n            user.signUp()\r\n            .then(\r\n                (result) => {\r\n                    alert(\"Usuario cadastrado com sucesso !!!\");\r\n                },\r\n                (err) => {\r\n                    alert(err);\r\n                }\r\n            );\r\n        }catch(error){\r\n            alert(error.message);\r\n        }\r\n    }\r\n\r\n    set(value, typeInput){\r\n        if(typeInput === 'email'){\r\n            this.setState({email: value});\r\n        }else{\r\n            this.setState({password: value});\r\n        }\r\n    }\r\n\r\n    changeVisibilityPass(){\r\n        let type = '';\r\n        if(this.state.type === 'password'){\r\n            type = 'text';\r\n        }else{\r\n            type = 'password';\r\n        }\r\n        this.setState({type});\r\n    }\r\n\r\n    render(){\r\n        /*\r\n            <p>Email</p>\r\n            <input type=\"text\" value={this.state.email}\r\n                        onChange={() => {this.setEmail(this.value)}}/>\r\n                    <p>Senha</p>\r\n                    <input type={this.state.type} value={this.state.senha}\r\n                        onChange={() => {this.setSenha(this.value)}}/>\r\n        */\r\n\r\n        /*\r\n            <p>Email</p>\r\n                    <Input type='text' value={this.state.email} typeInput='email' set={this.set}/>\r\n                    <p>Senha</p>\r\n                    <Input type={this.state.type} value={this.state.password} typeInput='password' set={this.set}/>\r\n        */\r\n        return(\r\n            <header className=\"form-render\">\r\n                <p>Orange</p>\r\n                <form>\r\n                    <p>Email</p>\r\n                    <Input id='idEmail' type='text' value={this.state.email} typeInput='email' set={this.set}/>\r\n                    <p>Senha</p>\r\n                    <Input id='idPass' type={this.state.type} value={this.state.password} typeInput='password' set={this.set}/>\r\n                    <input type=\"checkbox\" onChange={() => {this.changeVisibilityPass()}}/> Mostrar senha\r\n                    <p>Problemas para acessar a conta ?</p>\r\n                    <input type=\"button\" value=\"Acessar\" onClick={() => {this.logInUser()}}/>\r\n                </form>\r\n                <p>ou</p>\r\n                <input type=\"button\" value=\"Cadastrar\" onClick={() => {this.signUpUser()}}/>\r\n            </header>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}