{"ast":null,"code":"import _classCallCheck from \"C:\\\\proj_dex\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\proj_dex\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\proj_dex\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\proj_dex\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\proj_dex\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\proj_dex\\\\src\\\\components\\\\Content.js\";\nimport React from 'react';\nimport './css/Content.css';\nimport Parse from 'parse';\nimport MenuTop from './MenuTop';\nimport FlexView from 'react-flexview';\nimport { Col, Row } from 'react-flexbox-grid';\n\nvar Content =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Content, _React$Component);\n\n  function Content(props) {\n    var _this;\n\n    _classCallCheck(this, Content);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Content).call(this, props));\n    _this.state = {\n      listSel: 'FOODS'\n    };\n    return _this;\n  }\n\n  _createClass(Content, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      Parse.serverURL = 'http://localhost:1337/parse';\n      Parse.initialize('OSGiFZBrXxNLjN3gYDPsgi7P4a0j6fzcc2iaCKga', 'k8xm42UVuIP51wR2DswLY8NL3zgWfev8AuKUUjga');\n      this.checkLogIn();\n    }\n  }, {\n    key: \"checkLogIn\",\n    value: function checkLogIn() {\n      var url = window.location.href;\n\n      if (url.indexOf('?') != -1) {\n        var cont = url.split('?');\n        var email = atob(cont[1]);\n        var password = atob(cont[2]);\n        Parse.User.logIn(email, password).then(function (result) {}, function (err) {\n          window.location.href = 'http://localhost:3000';\n        });\n      } else {\n        window.location.href = 'http://localhost:3000';\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(MenuTop, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }), React.createElement(FlexView, {\n        vAlignContent: \"center\",\n        hAlignContent: \"center\",\n        className: \"view-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        style: {\n          backgroundColor: 'green',\n          width: '10vmin'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"LIST OF \", this.state.listSel), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Content;\n}(React.Component);\n\nexport { Content as default };","map":{"version":3,"sources":["C:\\proj_dex\\src\\components\\Content.js"],"names":["React","Parse","MenuTop","FlexView","Col","Row","Content","props","state","listSel","serverURL","initialize","checkLogIn","url","window","location","href","indexOf","cont","split","email","atob","password","User","logIn","then","result","err","backgroundColor","width","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,mBAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,oBAAzB;;IAEqBC,O;;;;;AAEjB,mBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACd,iFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAb;AAFc;AAGjB;;;;yCAEmB;AAChBR,MAAAA,KAAK,CAACS,SAAN,GAAkB,6BAAlB;AACAT,MAAAA,KAAK,CAACU,UAAN,CAAiB,0CAAjB,EAA6D,0CAA7D;AACA,WAAKC,UAAL;AACH;;;iCAEW;AACR,UAAIC,GAAG,GAAGC,MAAM,CAACC,QAAP,CAAgBC,IAA1B;;AACA,UAAGH,GAAG,CAACI,OAAJ,CAAY,GAAZ,KAAoB,CAAC,CAAxB,EAA0B;AACtB,YAAIC,IAAI,GAAGL,GAAG,CAACM,KAAJ,CAAU,GAAV,CAAX;AACA,YAAIC,KAAK,GAAGC,IAAI,CAACH,IAAI,CAAC,CAAD,CAAL,CAAhB;AACA,YAAII,QAAQ,GAAGD,IAAI,CAACH,IAAI,CAAC,CAAD,CAAL,CAAnB;AACAjB,QAAAA,KAAK,CAACsB,IAAN,CAAWC,KAAX,CAAiBJ,KAAjB,EAAwBE,QAAxB,EACCG,IADD,CAEI,UAACC,MAAD,EAAY,CAAE,CAFlB,EAGI,UAACC,GAAD,EAAS;AACLb,UAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,uBAAvB;AACH,SALL;AAOH,OAXD,MAWK;AACDF,QAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,uBAAvB;AACH;AACJ;;;6BAEO;AACJ,aACI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACQ,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADR,EAEQ,oBAAC,QAAD;AAAU,QAAA,aAAa,EAAC,QAAxB;AAAiC,QAAA,aAAa,EAAC,QAA/C;AAAwD,QAAA,SAAS,EAAC,cAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAG,QAAA,KAAK,EAAE;AAACY,UAAAA,eAAe,EAAE,OAAlB;AAA2BC,UAAAA,KAAK,EAAE;AAAlC,SAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAgE,KAAKrB,KAAL,CAAWC,OAA3E,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADJ,CAFR,CADJ;AAWH;;;;EA3CgCT,KAAK,CAAC8B,S;;SAAtBxB,O","sourcesContent":["import React from 'react';\r\nimport './css/Content.css';\r\nimport Parse from 'parse';\r\nimport MenuTop from './MenuTop';\r\nimport FlexView from 'react-flexview';\r\nimport { Col, Row } from 'react-flexbox-grid';\r\n\r\nexport default class Content extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = { listSel: 'FOODS' };\r\n    }\r\n\r\n    componentWillMount(){\r\n        Parse.serverURL = 'http://localhost:1337/parse';\r\n        Parse.initialize('OSGiFZBrXxNLjN3gYDPsgi7P4a0j6fzcc2iaCKga', 'k8xm42UVuIP51wR2DswLY8NL3zgWfev8AuKUUjga')\r\n        this.checkLogIn();\r\n    }\r\n\r\n    checkLogIn(){\r\n        let url = window.location.href;\r\n        if(url.indexOf('?') != -1){\r\n            let cont = url.split('?');\r\n            let email = atob(cont[1]);\r\n            let password = atob(cont[2]);\r\n            Parse.User.logIn(email, password)\r\n            .then(\r\n                (result) => {},\r\n                (err) => {\r\n                    window.location.href = 'http://localhost:3000';\r\n                }\r\n            );\r\n        }else{\r\n            window.location.href = 'http://localhost:3000';\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"content\">\r\n                    <MenuTop />\r\n                    <FlexView vAlignContent=\"center\" hAlignContent=\"center\" className=\"view-content\">\r\n                        <Row>\r\n                            <p style={{backgroundColor: 'green', width: '10vmin'}}>LIST OF {this.state.listSel}</p>\r\n                            <div></div>\r\n                        </Row>\r\n                    </FlexView>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}