{"ast":null,"code":"import _classCallCheck from \"C:\\\\proj_dex\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\proj_dex\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\proj_dex\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\proj_dex\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"C:\\\\proj_dex\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\proj_dex\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\proj_dex\\\\src\\\\components\\\\Form.js\";\nimport React from 'react';\nimport './css/Form.css';\nimport Input from './Input';\nimport Parse from 'parse';\nimport { Row, Col } from 'react-flexbox-grid';\nimport FlexView from 'react-flexview';\n\nvar Form =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Form, _React$Component);\n\n  function Form(props) {\n    var _this;\n\n    _classCallCheck(this, Form);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Form).call(this, props));\n    _this.state = {\n      email: '',\n      password: '',\n      type: 'password'\n    };\n    _this.set = _this.set.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Form, [{\n    key: \"logInUser\",\n    value: function logInUser() {\n      var user = Parse.User.logIn(this.state.email, this.state.password).then(function (result) {\n        alert('Welcome');\n      }, function (err) {\n        alert(err.message);\n      });\n    }\n  }, {\n    key: \"signUpUser\",\n    value: function signUpUser() {\n      var user = new Parse.User();\n      user.set('username', this.state.email);\n      user.set('email', this.state.email);\n      user.set('password', this.state.password);\n\n      try {\n        user.signUp().then(function (result) {\n          alert(\"Usuario cadastrado com sucesso !!!\");\n        }, function (err) {\n          alert(err);\n        });\n      } catch (error) {\n        alert(error.message);\n      }\n    }\n  }, {\n    key: \"set\",\n    value: function set(value, typeInput) {\n      if (typeInput === 'email') {\n        this.setState({\n          email: value\n        });\n      } else {\n        this.setState({\n          password: value\n        });\n      }\n    }\n  }, {\n    key: \"changeVisibilityPass\",\n    value: function changeVisibilityPass() {\n      var type = '';\n\n      if (this.state.type === 'password') {\n        type = 'text';\n      } else {\n        type = 'password';\n      }\n\n      this.setState({\n        type: type\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"cont-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(\"header\", {\n        className: \"form-render\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(FlexView, {\n        hAlignContent: \"center\",\n        vAlignContent: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(Row, {\n        className: \"logo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: require(\"../assets/logo.png\"),\n        height: \"27vmin\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      })), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"txtInput\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Email\"), React.createElement(Input, {\n        id: \"idEmail\",\n        type: \"text\",\n        value: this.state.email,\n        typeInput: \"email\",\n        set: this.set,\n        placeholder: \"seuemail@email.com\",\n        icon: require('../assets/mail.png'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"txtInput\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"Password\"), React.createElement(Input, {\n        id: \"idPass\",\n        type: this.state.type,\n        value: this.state.password,\n        typeInput: \"password\",\n        set: this.set,\n        placeholder: \"Password\",\n        icon: require('../assets/lock.png'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"checkbox-style\",\n        type: \"checkbox\",\n        onChange: function onChange() {\n          _this2.changeVisibilityPass();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"txtCheckbox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \" Mostrar a senha\")), React.createElement(\"p\", {\n        className: \"link-conta\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"Problemas para acessar a conta ?\"), React.createElement(\"input\", {\n        className: \"btnAcessar\",\n        type: \"button\",\n        value: \"Acessar\",\n        onClick: function onClick() {\n          _this2.logInUser();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      })))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: {\n          width: '50vmin',\n          marginTop: '5vmin'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"fieldset\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(\"legend\", {\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"ou\")))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"btnCadastrar\",\n        type: \"button\",\n        value: \"Cadastrar\",\n        onClick: function onClick() {\n          _this2.signUpUser();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }))))), React.createElement(\"div\", {\n        className: \"img\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"img\",\n        src: require('../assets/bg.jpg'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Form;\n}(React.Component);\n\nexport { Form as default };","map":{"version":3,"sources":["C:\\proj_dex\\src\\components\\Form.js"],"names":["React","Input","Parse","Row","Col","FlexView","Form","props","state","email","password","type","set","bind","user","User","logIn","then","result","alert","err","message","signUp","error","value","typeInput","setState","require","changeVisibilityPass","logInUser","width","marginTop","signUpUser","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './css/Form.css';\r\nimport Input from './Input';\r\nimport Parse from 'parse';\r\nimport {Row, Col} from 'react-flexbox-grid';\r\nimport FlexView from 'react-flexview';\r\n\r\nexport default class Form extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = { email: '', password: '', type: 'password' };\r\n        this.set = this.set.bind(this);\r\n    }\r\n\r\n    logInUser(){\r\n        let user = Parse.User.logIn(this.state.email, this.state.password)\r\n        .then(\r\n            (result) => {\r\n                alert('Welcome');\r\n            },\r\n            (err) => {\r\n                alert(err.message);\r\n            }\r\n        );\r\n    }\r\n\r\n    signUpUser(){\r\n        let user = new Parse.User();\r\n        user.set('username', this.state.email);\r\n        user.set('email', this.state.email);\r\n        user.set('password', this.state.password);\r\n        try{\r\n            user.signUp()\r\n            .then(\r\n                (result) => {\r\n                    alert(\"Usuario cadastrado com sucesso !!!\");\r\n                },\r\n                (err) => {\r\n                    alert(err);\r\n                }\r\n            );\r\n        }catch(error){\r\n            alert(error.message);\r\n        }\r\n    }\r\n\r\n    set(value, typeInput){\r\n        if(typeInput === 'email'){\r\n            this.setState({email: value});\r\n        }else{\r\n            this.setState({password: value});\r\n        }\r\n    }\r\n\r\n    changeVisibilityPass(){\r\n        let type = '';\r\n        if(this.state.type === 'password'){\r\n            type = 'text';\r\n        }else{\r\n            type = 'password';\r\n        }\r\n        this.setState({type});\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className='cont-form'>\r\n                <header className=\"form-render\">\r\n                    <FlexView hAlignContent='center' vAlignContent='center'>\r\n                        <Col>\r\n                            <Row className=\"logo\">\r\n                                <img src={require(\"../assets/logo.png\")} height='27vmin'/>\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <form>\r\n                                    <Col>\r\n                                        <p className=\"txtInput\">Email</p>\r\n                                        <Input \r\n                                            id='idEmail' \r\n                                            type='text' \r\n                                            value={this.state.email} \r\n                                            typeInput='email' \r\n                                            set={this.set}\r\n                                            placeholder='seuemail@email.com'\r\n                                            icon={require('../assets/mail.png')}\r\n                                        />\r\n                                        <p className=\"txtInput\">Password</p>\r\n                                        <Input \r\n                                            id='idPass' \r\n                                            type={this.state.type} \r\n                                            value={this.state.password} \r\n                                            typeInput='password' \r\n                                            set={this.set}\r\n                                            placeholder='Password'\r\n                                            icon={require('../assets/lock.png')}\r\n                                        />\r\n                                        <Row>\r\n                                            <input className=\"checkbox-style\" type=\"checkbox\" onChange={() => {this.changeVisibilityPass()}}/> \r\n                                            <p className=\"txtCheckbox\"> Mostrar a senha</p>\r\n                                        </Row>\r\n                                        <p className='link-conta'>Problemas para acessar a conta ?</p>\r\n                                        <input className='btnAcessar' type=\"button\" value=\"Acessar\" onClick={() => {this.logInUser()}}/>\r\n                                    </Col>\r\n                                </form>\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <div style={{width: '50vmin', marginTop: '5vmin'}}>\r\n                                    <fieldset>\r\n                                        <legend align='center'>ou</legend>\r\n                                    </fieldset>\r\n                                </div>\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <input className='btnCadastrar' type=\"button\" value=\"Cadastrar\" onClick={() => {this.signUpUser()}}/>\r\n                            </Row>\r\n                        </Col>\r\n                    </FlexView>\r\n                </header>\r\n                <div className='img'>\r\n                    <img className='img' src={require('../assets/bg.jpg')} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}