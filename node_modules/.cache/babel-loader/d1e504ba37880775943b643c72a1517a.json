{"ast":null,"code":"\"use strict\";\n/**\n * Copyright (c) 2015-present, Parse, LLC.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @flow\n */\n\n/* global localStorage */\n\nvar LocalDatastoreController = {\n  fromPinWithName: function fromPinWithName(name\n  /*: string*/\n  )\n  /*: Promise*/\n  {\n    var values = localStorage.getItem(name);\n\n    if (!values) {\n      return Promise.resolve(null);\n    }\n\n    var objects = JSON.parse(values);\n    return Promise.resolve(objects);\n  },\n  pinWithName: function pinWithName(name\n  /*: string*/\n  , value\n  /*: any*/\n  )\n  /*: Promise*/\n  {\n    try {\n      var values = JSON.stringify(value);\n      localStorage.setItem(name, values);\n    } catch (e) {\n      // Quota exceeded, possibly due to Safari Private Browsing mode\n      console.log(e.message); // eslint-disable-line no-console\n    }\n\n    return Promise.resolve();\n  },\n  unPinWithName: function unPinWithName(name\n  /*: string*/\n  )\n  /*: Promise*/\n  {\n    return Promise.resolve(localStorage.removeItem(name));\n  },\n  getAllContents: function getAllContents()\n  /*: Promise*/\n  {\n    var LDS = {};\n\n    for (var i = 0; i < localStorage.length; i += 1) {\n      var key = localStorage.key(i);\n      var value = localStorage.getItem(key);\n      LDS[key] = JSON.parse(value);\n    }\n\n    return Promise.resolve(LDS);\n  },\n  clear: function clear()\n  /*: Promise*/\n  {\n    return Promise.resolve(localStorage.clear());\n  }\n};\nmodule.exports = LocalDatastoreController;","map":null,"metadata":{},"sourceType":"script"}